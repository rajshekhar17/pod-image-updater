apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ template "pod-image-patcher.fullname" . }}
  labels:
    app: vault-secrets-injector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vault-secrets-injector
  template:
    metadata:
      labels:
        app: vault-secrets-injector
      annotations:
        bifrost.io/skip-image-injection: "true" 
        releaseTime: {{ dateInZone "2006-01-02 15:04:05Z" (now) "UTC"| quote }}       
    spec:
      priorityClassName: {{ .Values.priorityClassName }}
      hostNetwork: {{ .Values.hostNetwork }}
      serviceAccount: {{ include "pod-image-patcher.serviceAccountName" . }}
      containers:
        - name: {{ template "pod-image-patcher.fullname" . }}
          env:
            - name: REGISTRY
              value: {{ .Values.registry.url }}
            - name: PUBLIC_PROJECT
              value: {{ .Values.registry.project }}
            - name: REGISTRY_PROXY_NAME
              value: {{ .Values.registry.proxy }}
            - name: ISTIO_PROXY_IMAGE
              value: {{ .Values.registry.istioProxyImage }}
          image: {{ .Values.image }}:{{ .Values.tag }}
          imagePullPolicy: Always
          ports:                                                                                                                                                                                   
          - containerPort: {{ .Values.port }}
          {{- if .Values.hostNetwork }}
            hostPort: {{ .Values.port }}
          {{- end }}                                                                                                                                                    
            name: webhook                                                                                                                                                                             
            protocol: TCP
          args:
          - -sidecarCfgFile=/etc/webhook/config/sidecarconfig.yaml
          - -tlsCertFile=/etc/webhook/certs/tls.crt
          - -tlsKeyFile=/etc/webhook/certs/tls.key
          - -alsologtostderr
          - -port={{ .Values.port }}
          - -v=4
          - 2>&1
          volumeMounts:
          - name: webhook-certs
            mountPath: /etc/webhook/certs
            readOnly: true
          - name: webhook-config
            mountPath: /etc/webhook/config
      volumes:
      - name: webhook-certs
        secret:
          secretName: {{ template "pod-image-patcher.fullname" . }}-mutation-webhook-keypair
      - name: webhook-config
        configMap:
          name: {{ template "pod-image-patcher.fullname" . }}-configmap
